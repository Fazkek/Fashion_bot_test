from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
import asyncio
import config
import pymorphy2
from random import shuffle
from main import JsonFile, Predict, Color, Recomend

bot = Bot(token=config.BOT_TOKEN, parse_mode="HTML")
dp = Dispatcher(bot)


# –ó–¥–µ—Å—å —è –¥–æ–±–∞–≤–ª—è—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–∞–π–ª users.json –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ /start
@dp.message_handler(commands="start")
async def start(message: types.Message):
    data = JsonFile.read("users.json")
    data[f"{message.from_user.id}"] = []
    JsonFile.write(data, "users.json")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_1 = types.KeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–∞—Ä–¥–µ—Ä–æ–± ‚úîÔ∏è")
    button_2 = types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—â—å ‚ùåÔ∏è")    
    button_3 = types.KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é üëë")    

    keyboard.add(button_1, button_2, button_3)
    await message.bot.send_message(message.from_user.id, "üå∫–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å üå∫")
    await asyncio.sleep(1)
    await message.bot.send_message(message.from_user.id, "üëï–°–º–æ—Ç—Ä–∏, —á—Ç–æ —è —É–º–µ—é:üëñ\n"\
"1. –ß—Ç–æ–±—ã –¥–æ–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ–π –≥–∞—Ä–¥–µ—Ä–æ–±, –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –≤–µ—â–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—åüì∑\n"\
"2. –ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∫–∞–∫–∏–µ –≤–µ—â–∏ —É —Ç–µ–±—è –≤ –≥–∞—Ä–¥–µ—Ä–æ–±–µ, –Ω–∞–∂–º–∏ '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–∞—Ä–¥–µ—Ä–æ–± ‚úîÔ∏è'\n"\
"3. –ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–æ–±–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—â—å, –Ω–∞–∂–º–∏ '–£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—â—å ‚ùåÔ∏è''\n"\
"4. –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–æ–¥–Ω—ã–π —Å–æ–≤–µ—Ç, –Ω–∞–∂–º–∏ '–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é üëë'", reply_markup=keyboard)

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥: –ü—Ä–∏ —Å–∫–∏–¥—ã–≤–∞–Ω–∏–∏ —Ñ–æ—Ç–æ–∫, —è –≤—ã–∑—ã–≤–∞—é —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ —Ñ—É–Ω–∫–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞ main.py –∏ –ø–µ—Ä–µ–¥–∞—é –∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –∫–æ–¥ –≤—Å—ë –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ users.json
@dp.message_handler(content_types=['photo'])
async def handle_photo(message: types.Message):
    photo = message.photo[-1]
    photo_file = await bot.download_file_by_id(photo.file_id)

    with open(f"{photo.file_id}.jpg", "wb") as f:
        f.write(photo_file.read())
    fashion = Predict.fashion(photo)
    await bot.send_message(message.chat.id, text=f"–ù–∞ —Ñ–æ—Ç–æ: {fashion}")


    colour = Color.find(photo)
    await bot.send_message(message.chat.id, text=f"–¶–≤–µ—Ç: {colour}")

    data = JsonFile.read("users.json")
    data[f"{message.from_user.id}"].append({
        f"{fashion}": f"{colour}"
    })
    JsonFile.write(data, "users.json")


@dp.message_handler(content_types=['text'])
async def main(message: types.Message):
    if message.text == '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–∞—Ä–¥–µ—Ä–æ–± ‚úîÔ∏è':
        data = JsonFile.read("users.json")
        if len(data[f'{message.from_user.id}']) == 0:
             await message.bot.send_message(message.from_user.id, "‚ÄºÔ∏è‚ùåÔ∏è–í –≤–∞—à–µ–º –≥–∞—Ä–¥–µ—Ä–æ–±–µ –Ω–µ—Ç –≤–µ—â–µ–π‚ùåÔ∏è‚ÄºÔ∏è")
        else:
            await message.bot.send_message(message.from_user.id, "üé©–ì–æ—Ç–æ–≤–æ. –í–∞—à –≥–∞—Ä–¥–µ—Ä–æ–±:üé©")
            clothes = ''
            morph = pymorphy2.MorphAnalyzer()
            for i in range(len(data[f'{message.from_user.id}'])):
                for key, value in data[f'{message.from_user.id}'][i].items():
                        if morph.parse(key)[0].tag.number == 'plur':
                            clothes += f"{i+1}) {morph.parse(value)[0].inflect({'nomn', f'{morph.parse(key)[0].tag.number}'}).word.capitalize()} {key}\n"
                        else:
                            clothes += f"{i+1}) {morph.parse(value)[0].inflect({'nomn', f'{morph.parse(key)[0].tag.number}', f'{morph.parse(key)[0].tag.gender}'}).word.capitalize()} {key}\n"
                             

            await message.bot.send_message(message.from_user.id, clothes)


    elif message.text == '–£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—â—å ‚ùåÔ∏è':
        data = JsonFile.read("users.json")
        if len(data[f'{message.from_user.id}']) == 0:
             await message.bot.send_message(message.from_user.id, "‚ÄºÔ∏è‚ùåÔ∏è–í –≤–∞—à–µ–º –≥–∞—Ä–¥–µ—Ä–æ–±–µ –Ω–µ—Ç –≤–µ—â–µ–π‚ùåÔ∏è‚ÄºÔ∏è")
        else:
            data[f'{message.from_user.id}'].pop()
            JsonFile.write(data, "users.json")

            await message.bot.send_message(message.from_user.id, "–ì–æ—Ç–æ–≤–æ. –í–æ—Ç –≤–∞—à –≥–∞—Ä–¥–µ—Ä–æ–±:")

            clothes = ''
            for i in range(len(data[f'{message.from_user.id}'])):
                for key, value in data[f'{message.from_user.id}'][i].items():
                        clothes += f"{i+1}) {key}: {value}\n"

            await message.bot.send_message(message.from_user.id, clothes)


    elif message.text == '–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é üëë': 
        data = JsonFile.read('users.json')
        if len(data[f'{message.from_user.id}']) == 0:
            await message.bot.send_message(message.from_user.id, "‚ÄºÔ∏è‚ùåÔ∏è–í –≤–∞—à–µ–º –≥–∞—Ä–¥–µ—Ä–æ–±–µ –Ω–µ—Ç –≤–µ—â–µ–π‚ùåÔ∏è‚ÄºÔ∏è")
        else:
            rec = Recomend.recommend_outfit({f'{message.from_user.id}': data[f'{message.from_user.id}']})
            shuffle(rec)
            try:
                await message.bot.send_message(message.from_user.id, rec[0])
            except IndexError:
                await message.bot.send_message(message.from_user.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å üòî")
                await asyncio.sleep(0.5)
                await message.bot.send_message(message.from_user.id, "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –µ—â—ë —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.")
                await asyncio.sleep(0.5)
                await message.bot.send_message(message.from_user.id, "–í–æ—Ç –≤–∞–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–æ–≤–µ—Ç: \n –ù–∞–¥–µ–≤–∞–π—Ç–µ –≤–µ—â–∏ –æ–¥–Ω–æ–≥–æ —Ç–æ–Ω–∞ –∏ –≤—ã –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≤—ã–≥–ª—è–¥–µ—Ç—å —Å—Ç–∏–ª—å–Ω–æ üëç")
    else:
        await message.bot.send_message(message.from_user.id, "‚õîÔ∏è–ö–æ–º–∞–Ω–¥–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚õîÔ∏è")
        

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)